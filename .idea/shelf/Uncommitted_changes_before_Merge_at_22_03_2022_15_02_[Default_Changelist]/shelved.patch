Index: .idea/API.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/API.iml	(date 1647943840177)
+++ .idea/API.iml	(date 1647943840177)
@@ -0,0 +1,8 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<module type="WEB_MODULE" version="4">
+  <component name="NewModuleRootManager">
+    <content url="file://$MODULE_DIR$" />
+    <orderEntry type="inheritedJdk" />
+    <orderEntry type="sourceFolder" forTests="false" />
+  </component>
+</module>
\ No newline at end of file
Index: .idea/modules.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/modules.xml	(date 1647943840189)
+++ .idea/modules.xml	(date 1647943840189)
@@ -0,0 +1,8 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="ProjectModuleManager">
+    <modules>
+      <module fileurl="file://$PROJECT_DIR$/.idea/API.iml" filepath="$PROJECT_DIR$/.idea/API.iml" />
+    </modules>
+  </component>
+</project>
\ No newline at end of file
Index: .idea/vcs.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/vcs.xml	(date 1647943840200)
+++ .idea/vcs.xml	(date 1647943840200)
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="VcsDirectoryMappings">
+    <mapping directory="$PROJECT_DIR$" vcs="Git" />
+  </component>
+</project>
\ No newline at end of file
Index: docketu-node/service_gateway/routes/users.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>const express = require('express');\r\nconst router = express.Router();\r\nconst monAxios = require('../axios/axios')\r\n\r\nconst methodNotAllowed = require('../errors/methodNotAllowed.js');\r\n\r\nconst url = \"http://service_auth:3001\"\r\nconst axios = monAxios(url)\r\n\r\n//req.path \r\n/* GET home page. */\r\nrouter.route('/')\r\n    .patch(methodNotAllowed)\r\n    .delete(methodNotAllowed)\r\n    .put(methodNotAllowed)\r\n    .post(methodNotAllowed)\r\n    .get(function (req, res, next) {\r\n        console.log(axios)\r\n        console.log('/'+req.path)\r\n        axios.get('/users' + req.path).then(resp => {\r\n            \r\n            \r\n        res.json(resp.data)\r\n    })\r\n})\r\n\r\nrouter.route('/signup')\r\n    .patch(methodNotAllowed)\r\n    .delete(methodNotAllowed)\r\n    .put(methodNotAllowed)\r\n    .post(async (req, res, next ) => {\r\n        axios.post('/users' + req.path, req.body).then(resp => {\r\n        res.json(resp.data)\r\n        return res\r\n        })\r\n    })\r\n    .get(methodNotAllowed)\r\n\r\nrouter.route('/signin')\r\n// Il faut gerer le fait que les adresse mails peuvent etre en doublon\r\n    .patch(methodNotAllowed)\r\n    .delete(methodNotAllowed)\r\n    .put(methodNotAllowed)\r\n    .post(async (req, res, next ) => {\r\n        axios.post('/users' + req.path, req.body).then(resp => {\r\n        res.json(resp.data)\r\n        return res\r\n        })\r\n    })\r\n    .get(methodNotAllowed)\r\n\r\nrouter.route('/:id')\r\n    .patch(methodNotAllowed)\r\n    .delete(methodNotAllowed)\r\n    .post(methodNotAllowed)\r\n    .put(methodNotAllowed)\r\n    .get(function (req, res, next) {\r\n        axios.get('/users/' + req.params.id).then(resp => {\r\n            res.json(resp.data)\r\n            return res\r\n        })\r\n    })\r\n\r\nmodule.exports = router;\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- docketu-node/service_gateway/routes/users.js	(revision e3b582c3782bcd83c638c188e19da06ef572f5a4)
+++ docketu-node/service_gateway/routes/users.js	(date 1647944245506)
@@ -4,7 +4,7 @@
 
 const methodNotAllowed = require('../errors/methodNotAllowed.js');
 
-const url = "http://service_auth:3001"
+const url = "http://service_auth:3000"
 const axios = monAxios(url)
 
 //req.path 
Index: docketu-node/service_auth/.gitignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>.env\r\n# Created by https://www.toptal.com/developers/gitignore/api/node\r\n# Edit at https://www.toptal.com/developers/gitignore?templates=node\r\n\r\n### Node ###\r\n# Logs\r\nlogs\r\n*.log\r\nnpm-debug.log*\r\nyarn-debug.log*\r\nyarn-error.log*\r\nlerna-debug.log*\r\n\r\n# Diagnostic reports (https://nodejs.org/api/report.html)\r\nreport.[0-9]*.[0-9]*.[0-9]*.[0-9]*.json\r\n\r\n# Runtime data\r\npids\r\n*.pid\r\n*.seed\r\n*.pid.lock\r\n\r\n# Directory for instrumented libs generated by jscoverage/JSCover\r\nlib-cov\r\n\r\n# Coverage directory used by tools like istanbul\r\ncoverage\r\n*.lcov\r\n\r\n# nyc test coverage\r\n.nyc_output\r\n\r\n# Grunt intermediate storage (https://gruntjs.com/creating-plugins#storing-task-files)\r\n.grunt\r\n\r\n# Bower dependency directory (https://bower.io/)\r\nbower_components\r\n\r\n# node-waf configuration\r\n.lock-wscript\r\n\r\n# Compiled binary addons (https://nodejs.org/api/addons.html)\r\nbuild/Release\r\n\r\n# Dependency directories\r\nnode_modules/\r\njspm_packages/\r\n\r\n# TypeScript v1 declaration files\r\ntypings/\r\n\r\n# TypeScript cache\r\n*.tsbuildinfo\r\n\r\n# Optional npm cache directory\r\n.npm\r\n\r\n# Optional eslint cache\r\n.eslintcache\r\n\r\n# Optional stylelint cache\r\n.stylelintcache\r\n\r\n# Microbundle cache\r\n.rpt2_cache/\r\n.rts2_cache_cjs/\r\n.rts2_cache_es/\r\n.rts2_cache_umd/\r\n\r\n# Optional REPL history\r\n.node_repl_history\r\n\r\n# Output of 'npm pack'\r\n*.tgz\r\n\r\n# Yarn Integrity file\r\n.yarn-integrity\r\n\r\n# dotenv environment variables file\r\n.env\r\n.env.test\r\n.env*.local\r\n\r\n# parcel-bundler cache (https://parceljs.org/)\r\n.cache\r\n.parcel-cache\r\n\r\n# Next.js build output\r\n.next\r\n\r\n# Nuxt.js build / generate output\r\n.nuxt\r\ndist\r\n\r\n# Gatsby files\r\n.cache/\r\n# Comment in the public line in if your project uses Gatsby and not Next.js\r\n# https://nextjs.org/blog/next-9-1#public-directory-support\r\n# public\r\n\r\n# vuepress build output\r\n.vuepress/dist\r\n\r\n# Serverless directories\r\n.serverless/\r\n\r\n# FuseBox cache\r\n.fusebox/\r\n\r\n# DynamoDB Local files\r\n.dynamodb/\r\n\r\n# TernJS port file\r\n.tern-port\r\n\r\n# Stores VSCode versions used for testing VSCode extensions\r\n.vscode-test\r\n\r\n# End of https://www.toptal.com/developers/gitignore/api/node\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- docketu-node/service_auth/.gitignore	(revision e3b582c3782bcd83c638c188e19da06ef572f5a4)
+++ docketu-node/service_auth/.gitignore	(date 1647943907624)
@@ -1,4 +1,4 @@
-.env
+../.env
 # Created by https://www.toptal.com/developers/gitignore/api/node
 # Edit at https://www.toptal.com/developers/gitignore?templates=node
 
@@ -77,7 +77,7 @@
 .yarn-integrity
 
 # dotenv environment variables file
-.env
+../.env
 .env.test
 .env*.local
 
Index: .idea/codeStyles/codeStyleConfig.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/codeStyles/codeStyleConfig.xml	(date 1647943840214)
+++ .idea/codeStyles/codeStyleConfig.xml	(date 1647943840214)
@@ -0,0 +1,5 @@
+<component name="ProjectCodeStyleConfiguration">
+  <state>
+    <option name="PREFERRED_PROJECT_CODE_STYLE" value="Default" />
+  </state>
+</component>
\ No newline at end of file
